# Scope: Provides DockerHub build & push (with cache), as well as empty linting and testing jobs 

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  set_docker:
    runs-on: ubuntu-latest
    outputs:
      DOCKER_REPO: ${{ steps.set_docker_repo.outputs.DOCKER_REPO }}
    steps:
    - name: Set DOCKER_REPO
      id: set_docker_repo
      run: |
        echo "::set-output name=DOCKER_REPO::${{ secrets.DOCKER_HUB_ID }}/${GITHUB_REPOSITORY#*/}"
  
  build:
    runs-on: ubuntu-latest
    needs: set_docker
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_ID }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Access Docker layer cache
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build from cache and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./.devcontainer/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        tags: ${{ needs.set_docker.outputs.DOCKER_REPO }}:${{ github.sha }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
        push: true

    - name: Clean cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  lint:
    runs-on: ubuntu-latest
    needs: [ set_docker, build ]
    container:
      image: ${{ needs.set_docker.outputs.DOCKER_REPO }}:${{ github.sha }}
      credentials:
        username: ${{ secrets.DOCKER_HUB_ID }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Run Lint
      run: |
        echo "Linting Successful"

  test:
    runs-on: ubuntu-latest
    needs: [ set_docker, build ]
    container:
      image: ${{ needs.set_docker.outputs.DOCKER_REPO }}:${{ github.sha }}
      credentials:
        username: ${{ secrets.DOCKER_HUB_ID }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Run Test
      run: |
        echo "Testing Successful"
